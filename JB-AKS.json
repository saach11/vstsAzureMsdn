{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
		"location": {
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
		"agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
			"allowedValues": [
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_Ds1_v2",
				"Standard_Ds2_v2",
				"Standard_Ds3_v2",
				"Standard_Ds4_v2",
				"Standard_Ds5_v2",
				"Standard_Ds11_v2",
				"Standard_Ds12_v2",
				"Standard_Ds13_v2",
				"Standard_Ds14_v2",
				"Standard_G1",
				"Standard_G2",
				"Standard_G3",
				"Standard_G4",
				"Standard_G5",
				"Standard_Gs1",
				"Standard_Gs2",
				"Standard_Gs3",
				"Standard_Gs4",
				"Standard_Gs5"
			]
        },
		"managementResourceName": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of existing reousce group for Management."
            }
        },
		"virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "The name of existing vNet."
            }
        },
		"workspaceRegion": {
            "type": "string",
            "defaultValue": "West Europe",
            "metadata": {
                "description": "Specify the region for your OMS workspace."
            },
			"allowedValues": [
				"Australia Southeast",
				"Canada Central",
				"Central India",
				"East US",
				"Japan East",
				"Southeast Asia",
				"UK South",
				"West Europe"
			]
        },
		"workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the OMS workspace."
            }
        },
		"monitoringResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of existing reousce group for Monitoring."
            }
        },
		"serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
		"dnsServiceIp": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        }
    },
    "variables": {
		"osDiskSizeGB": 0,
		"osType": "Linux",
		"kubernetesVersion": "1.9.6",
		"enableOmsAgent": true,
		"omsSku": "PerGB2018",
		"enableHttpApplicationRouting": true,
		"networkPlugin": "azure",
		"maxPods": 30,
		"subnetName": "kubPrivSn",
		"vnetId": "[resourceId(parameters('managementResourceName'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
		"vnetSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('SubnetName'))]",
		"omsWorkspaceId": "[resourceId(parameters('monitoringResourceGroup'),'microsoft.operationalinsights/workspaces', parameters('workspaceName'))]",
		"omsSolutionName": "[concat('ContainerInsights', '(', split(variables('omsWorkspaceId'),'/')[8], ')')]",
		"dockerBridgeCidr": "172.17.0.1/16"		
    },
	"resources": [
        {
            "apiVersion": "2018-03-31",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'WorkspaceDeployment')]"
            ],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('resourceName')]",
            "properties": {
                "kubernetesVersion": "[variables('kubernetesVersion')]",
                "enableRBAC": false,
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[variables('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[variables('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[variables('omsWorkspaceId')]"
                        }
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[variables('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[variables('osType')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[variables('vnetSubnetId')]"
                    }
                ],
                "servicePrincipalProfile": {
                    "ClientId": "[parameters('servicePrincipalClientId')]",
                    "Secret": "[parameters('servicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[variables('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIp')]",
                    "dockerBridgeCidr": "[variables('dockerBridgeCidr')]"
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SolutionDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[split(variables('omsWorkspaceId'),'/')[4]]",
            "subscriptionId": "[split(variables('omsWorkspaceId'),'/')[2]]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[parameters('workspaceRegion')]",
                            "name": "[variables('omsSolutionName')]",
                            "properties": {
                                "workspaceResourceId": "[variables('omsWorkspaceId')]"
                            },
                            "plan": {
                                "name": "[variables('omsSolutionName')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'WorkspaceDeployment')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "WorkspaceDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[split(variables('omsWorkspaceId'),'/')[4]]",
            "subscriptionId": "[split(variables('omsWorkspaceId'),'/')[2]]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces",
                            "location": "[parameters('workspaceRegion')]",
                            "name": "[parameters('workspaceName')]",
                            "properties": {
                                "sku": {
                                    "name": "[variables('omsSku')]"
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
        }
    }
}